{"ast":null,"code":"var _jsxFileName = \"/Users/eashansoni/Documents/CollegeCoursework/CSCE483/AI-guided-coil-gun/user-interface/react-ui/src/components/CameraImagery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport Box from '@mui/material/Box';\nimport settings from '../settings/settings.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CameraImagery = () => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const canvasRef = useRef();\n  const [imageData, setImageData] = useState(null);\n  const [boundingBoxList, setBoundingBoxList] = useState(null);\n  useEffect(() => {\n    const newSocket = io(settings.api.url);\n    setSocket(newSocket);\n    newSocket.on('camera-imagery', frame => {\n      setImageData(frame);\n    });\n    newSocket.on('gpu-bounding-box', boundingBoxList => {\n      setBoundingBoxList(boundingBoxList);\n    });\n    return () => newSocket.close();\n  }, [setSocket]); //will always be called since setSocket get updated when socket get updated\n\n  function drawBoundingBoxes() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.strokeStyle = \"white\";\n    context.lineWidth = 2;\n    context.strokeRect(50, 30, 110, 90);\n    context.strokeRect(170, 65, 100, 80);\n  }\n  ;\n  useEffect(() => {\n    drawBoundingBoxes();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <Box\n    //   style={{\n    //     position:'absolute',\n    //     width: '70%',\n    //     height: '65%',\n    //     left: '50%',\n    //     top: '22%',\n    //     transform: 'translate(-50%, 0%)',\n    //     border: 'solid 2px black',\n    //     textAlign: 'center',\n    //   }}>  \n    //   Placeholder\n    //   {/* {imageData && (\n    //     <img\n    //       style={{ width: '80%', height: 'auto'}}\n    //       src={`data:image/jpeg;base64,${imageData}`}\n    //       alt=\"Thermal Imagery\"\n    //     />\n    //   )} */}\n    // </Box>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: 'absolute',\n          width: '70%',\n          height: '65%',\n          left: '50%',\n          top: '22%',\n          transform: 'translate(-50%, 0%)',\n          background: 'url(https://images.pexels.com/photos/56866/garden-rose-red-pink-56866.jpeg?cs=srgb&dl=pexels-pixabay-56866.jpg&fm=jpg)',\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(CameraImagery, \"Kn1AGiCUIuPOhYFAI0+8UHlps7g=\");\n_c = CameraImagery;\nexport default CameraImagery;\nvar _c;\n$RefreshReg$(_c, \"CameraImagery\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","Box","settings","jsxDEV","_jsxDEV","CameraImagery","_s","socket","setSocket","canvasRef","imageData","setImageData","boundingBoxList","setBoundingBoxList","newSocket","api","url","on","frame","close","drawBoundingBoxes","context","current","getContext","strokeStyle","lineWidth","strokeRect","children","ref","style","position","width","height","left","top","transform","background","backgroundSize","backgroundRepeat","backgroundPosition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eashansoni/Documents/CollegeCoursework/CSCE483/AI-guided-coil-gun/user-interface/react-ui/src/components/CameraImagery.js"],"sourcesContent":["import React, { useState, useEffect, useRef} from 'react';\nimport { io } from 'socket.io-client';\nimport Box from '@mui/material/Box';\nimport settings from '../settings/settings.json';\n\nconst CameraImagery = () => {\n  const [socket, setSocket] = useState(null);\n  const canvasRef = useRef();\n  const [imageData, setImageData] = useState(null);\n  const [boundingBoxList, setBoundingBoxList] = useState(null);\n\n  useEffect(() => {\n    const newSocket = io(settings.api.url);\n    setSocket(newSocket);\n    newSocket.on('camera-imagery', (frame) => {\n      setImageData(frame);\n    });\n    newSocket.on('gpu-bounding-box', (boundingBoxList) => {\n      setBoundingBoxList(boundingBoxList);\n    });\n    return () => newSocket.close();\n  }, [setSocket]); //will always be called since setSocket get updated when socket get updated\n\n  function drawBoundingBoxes(){\n    const context = canvasRef.current.getContext(\"2d\");\n    context.strokeStyle = \"white\";\n    context.lineWidth = 2;\n    context.strokeRect(50, 30, 110, 90);\n    context.strokeRect(170, 65, 100, 80);\n  };\n\n  useEffect(() => {\n      drawBoundingBoxes();\n  }, []);\n\n  return (\n    // <Box\n    //   style={{\n    //     position:'absolute',\n    //     width: '70%',\n    //     height: '65%',\n    //     left: '50%',\n    //     top: '22%',\n    //     transform: 'translate(-50%, 0%)',\n    //     border: 'solid 2px black',\n    //     textAlign: 'center',\n    //   }}>  \n    //   Placeholder\n    //   {/* {imageData && (\n    //     <img\n    //       style={{ width: '80%', height: 'auto'}}\n    //       src={`data:image/jpeg;base64,${imageData}`}\n    //       alt=\"Thermal Imagery\"\n    //     />\n    //   )} */}\n    // </Box>\n    <div>\n      <canvas\n        ref={canvasRef}\n        style={{\n          position:'absolute',\n          width: '70%',\n          height: '65%',\n          left: '50%',\n          top: '22%',\n          transform: 'translate(-50%, 0%)',\n          background: 'url(https://images.pexels.com/photos/56866/garden-rose-red-pink-56866.jpeg?cs=srgb&dl=pexels-pixabay-56866.jpg&fm=jpg)',\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"center\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CameraImagery;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACzD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,QAAQ,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAMY,SAAS,GAAGV,MAAM,CAAC,CAAC;EAC1B,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAGd,EAAE,CAACE,QAAQ,CAACa,GAAG,CAACC,GAAG,CAAC;IACtCR,SAAS,CAACM,SAAS,CAAC;IACpBA,SAAS,CAACG,EAAE,CAAC,gBAAgB,EAAGC,KAAK,IAAK;MACxCP,YAAY,CAACO,KAAK,CAAC;IACrB,CAAC,CAAC;IACFJ,SAAS,CAACG,EAAE,CAAC,kBAAkB,EAAGL,eAAe,IAAK;MACpDC,kBAAkB,CAACD,eAAe,CAAC;IACrC,CAAC,CAAC;IACF,OAAO,MAAME,SAAS,CAACK,KAAK,CAAC,CAAC;EAChC,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,SAASY,iBAAiBA,CAAA,EAAE;IAC1B,MAAMC,OAAO,GAAGZ,SAAS,CAACa,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;IAClDF,OAAO,CAACG,WAAW,GAAG,OAAO;IAC7BH,OAAO,CAACI,SAAS,GAAG,CAAC;IACrBJ,OAAO,CAACK,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;IACnCL,OAAO,CAACK,UAAU,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;EACtC;EAAC;EAED5B,SAAS,CAAC,MAAM;IACZsB,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAhB,OAAA;MAAAuB,QAAA,eACEvB,OAAA;QACEwB,GAAG,EAAEnB,SAAU;QACfoB,KAAK,EAAE;UACLC,QAAQ,EAAC,UAAU;UACnBC,KAAK,EAAE,KAAK;UACZC,MAAM,EAAE,KAAK;UACbC,IAAI,EAAE,KAAK;UACXC,GAAG,EAAE,KAAK;UACVC,SAAS,EAAE,qBAAqB;UAChCC,UAAU,EAAE,wHAAwH;UACpIC,cAAc,EAAE,OAAO;UACvBC,gBAAgB,EAAE,WAAW;UAC7BC,kBAAkB,EAAE;QACtB;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;AAEV,CAAC;AAACrC,EAAA,CArEID,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AAuEnB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}